name: Manual Build (Bun + Rust + WASM)

on:
  workflow_dispatch:
    inputs:
      http_proxy:
        description: "Optional Http Proxy URL (example: https://proxy.com)"
        required: false
        default: ""
      http_proxy_curl:
        description: "Optional Raw Http Proxy URL (example: http://proxy.com)"
        required: false
        default: ""
      target_url:
        description: "Optional Target URL"
        required: false
        default: ""
      delay_fetch:
        description: "Optional delay fetch"
        required: false
        type: boolean
        default: true
      full_log:
        description: "Optional enable show full log"
        required: false
        type: boolean
        default: true

concurrency:
  group: build-shared
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Cargo
        uses: actions/cache/restore@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            wasm/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('wasm/Cargo.lock') }}

      - name: Cache wasm/pkg
        id: cache-wasm
        uses: actions/cache/restore@v4
        with:
          path: wasm/pkg
          key: ${{ runner.os }}-wasm-${{ hashFiles('wasm/Cargo.toml', 'wasm/Cargo.lock', 'wasm/src/**/*.rs') }}

      - name: Build WASM
        if: steps.cache-wasm.outputs.cache-hit != 'true'
        working-directory: wasm
        run: cargo install wasm-pack && sh build.sh

      - name: Save Cargo
        uses: actions/cache/save@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            wasm/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('wasm/Cargo.lock') }}

      - name: Save wasm/pkg
        uses: actions/cache/save@v4
        with:
          path: wasm/pkg
          key: ${{ runner.os }}-wasm-${{ hashFiles('wasm/Cargo.toml', 'wasm/Cargo.lock', 'wasm/src/**/*.rs') }}

      - name: Write environment file
        run: |
          echo "${{ secrets.ENV_CONTENT }}" > .env
          echo ".env file created with secret content"

      - name: Write cookie.json safely
        run: |
          cat <<'EOF' > cookie.json
          ${{ secrets.COOKIE }}
          EOF

      - name: Install dependencies
        run: bun install

      - name: Run index.ts
        env:
          HTTP_PROXY: ${{ github.event.inputs.http_proxy }}
          HTTP_PROXY_CURL: ${{ github.event.inputs.http_proxy_curl }}
          TARGET_URL: ${{ github.event.inputs.target_url }}
          DELAY_FETCH: ${{ github.event.inputs.delay_fetch }}
          FULL_LOG: ${{ github.event.inputs.full_log }}
        run: |
          if [ -n "${HTTP_PROXY}" ]; then
            echo "ðŸ”— Using proxy: ${HTTP_PROXY}"
            HTTP_PROXY="${HTTP_PROXY}" bun run index.ts
          else
            echo "ðŸš€ No proxy, running normally"
            bun run index.ts
          fi

      - name: Commit error.log if failed
        if: failure() || cancelled()
        run: |
          echo "Committing error.log due to failure or cancel..."
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add error.log || true
          git add page_ok.log || true
          git commit -m "ðŸ§© Build failed â€” upload error.log [skip ci]" || true
          git pull --rebase || true
          git push origin HEAD:${{ github.ref_name }} || true
